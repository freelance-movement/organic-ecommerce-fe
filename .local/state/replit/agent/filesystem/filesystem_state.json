{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nVietRoot is a Vietnamese organic products e-commerce platform showcasing authentic agricultural products from Vietnamese farmers. The application features a modern, responsive homepage with a nature-inspired design emphasizing freshness, sustainability, and cultural authenticity. The platform aims to connect consumers with high-quality organic products while promoting Vietnamese agricultural heritage.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe frontend is built using React with TypeScript, utilizing a component-based architecture with modern UI patterns:\n\n- **React Router**: Uses Wouter for lightweight client-side routing\n- **UI Components**: Implements shadcn/ui component library with Radix UI primitives for accessibility and consistency\n- **Styling**: Tailwind CSS with custom VietRoot brand colors (greens and earth tones) and CSS custom properties for theming\n- **State Management**: TanStack React Query for server state management with custom query client configuration\n- **Form Handling**: React Hook Form with Zod validation schemas for type-safe form management\n\n## Backend Architecture\nThe backend follows a layered Express.js architecture with TypeScript:\n\n- **Server Framework**: Express.js with middleware for logging, error handling, and request processing\n- **Storage Layer**: Abstracted storage interface supporting both in-memory storage (development) and database implementations\n- **Development Setup**: Vite integration for hot module replacement and development server proxy\n- **Build Process**: ESBuild for server bundling and Vite for client bundling\n\n## Database Design\nThe application uses Drizzle ORM with PostgreSQL:\n\n- **ORM**: Drizzle ORM for type-safe database operations with generated TypeScript types\n- **Schema**: Centralized schema definitions in shared directory for type consistency across client and server\n- **Migrations**: Drizzle Kit for database migrations and schema management\n- **Database Provider**: Configured for Neon Database (serverless PostgreSQL)\n\n## Development and Build System\nModern tooling stack optimized for developer experience:\n\n- **Build Tool**: Vite for fast development server and optimized production builds\n- **TypeScript**: Strict TypeScript configuration with path mapping for clean imports\n- **Package Management**: NPM with lock file for consistent dependency resolution\n- **Hot Reload**: Vite HMR with React Fast Refresh for instant development feedback\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL provider for production database hosting\n- **Drizzle ORM**: Type-safe database toolkit with PostgreSQL dialect support\n\n## UI and Component Libraries\n- **shadcn/ui**: Modern React component library built on Radix UI primitives\n- **Radix UI**: Unstyled, accessible UI components for complex interactions\n- **Tailwind CSS**: Utility-first CSS framework with custom brand color extensions\n- **Lucide React**: Icon library for consistent iconography throughout the application\n\n## Development and Build Tools\n- **Vite**: Modern build tool with TypeScript support and development server\n- **ESBuild**: Fast JavaScript bundler for server-side code compilation\n- **PostCSS**: CSS processing with Tailwind CSS and Autoprefixer plugins\n- **Replit Integration**: Development environment plugins for cloud-based coding\n\n## Runtime and Utilities\n- **TanStack React Query**: Server state management with caching and synchronization\n- **React Hook Form**: Performant form library with validation integration\n- **Zod**: TypeScript-first schema validation for runtime type checking\n- **date-fns**: Date manipulation library for formatting and calculations\n- **Wouter**: Minimalist router for React applications","size_bytes":3820},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"viet-green\": {\n          dark: \"var(--viet-green-dark)\",\n          medium: \"var(--viet-green-medium)\",\n          light: \"var(--viet-green-light)\",\n        },\n        \"viet-earth\": {\n          cream: \"var(--viet-earth-cream)\",\n          gold: \"var(--viet-earth-gold)\",\n          orange: \"var(--viet-earth-orange)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        inter: [\"Inter\", \"system-ui\", \"sans-serif\"],\n        montserrat: [\"Montserrat\", \"system-ui\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3216},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Products from \"@/pages/products\";\nimport Impact from \"@/pages/impact\";\nimport Partnerships from \"@/pages/partnerships\";\nimport Blog from \"@/pages/blog\";\nimport Contact from \"@/pages/contact\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/products\" component={Products} />\n      <Route path=\"/impact\" component={Impact} />\n      <Route path=\"/partnerships\" component={Partnerships} />\n      <Route path=\"/blog\" component={Blog} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1245},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Montserrat:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(210, 25%, 7.8431%);\n  --card: hsl(180, 6.6667%, 97.0588%);\n  --card-foreground: hsl(210, 25%, 7.8431%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(210, 25%, 7.8431%);\n  --primary: #2E8B57;\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 25%, 7.8431%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 1.9608%, 90%);\n  --muted-foreground: hsl(210, 25%, 7.8431%);\n  --accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --accent-foreground: hsl(203.8863, 88.2845%, 53.1373%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(201.4286, 30.4348%, 90.9804%);\n  --input: hsl(200, 23.0769%, 97.4510%);\n  --ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --chart-1: hsl(203.8863, 88.2845%, 53.1373%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(180, 6.6667%, 97.0588%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(203.8863, 88.2845%, 53.1373%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863, 88.2845%, 53.1373%);\n  --sidebar-border: hsl(205.0000, 25.0000%, 90.5882%);\n  --sidebar-ring: hsl(202.8169, 89.1213%, 53.1373%);\n  \n  /* VietRoot Brand Colors */\n  --viet-green-dark: hsl(147, 50%, 27%);\n  --viet-green-medium: #2E8B57;\n  --viet-green-light: hsl(147, 45%, 65%);\n  --viet-earth-cream: hsl(48, 71%, 91%);\n  --viet-earth-gold: hsl(43, 67%, 44%);\n  --viet-earth-orange: hsl(32, 69%, 61%);\n  \n  --font-sans: 'Inter', 'Montserrat', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(203.7736, 87.6033%, 52.5490%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(195.0000, 15.3846%, 94.9020%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(205.7143, 70%, 7.8431%);\n  --accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --chart-1: hsl(203.8863, 88.2845%, 53.1373%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(228, 9.8039%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85.0980%);\n  --sidebar-primary: hsl(202.8169, 89.1213%, 53.1373%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(205.7143, 70%, 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --sidebar-border: hsl(205.7143, 15.7895%, 26.0784%);\n  --sidebar-ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --font-sans: 'Inter', 'Montserrat', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373% / 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .animate-fade-in-up {\n    animation: fadeInUp 0.6s ease-out forwards;\n  }\n  \n  .animation-delay-200 {\n    animation-delay: 0.2s;\n  }\n  \n  .animation-delay-400 {\n    animation-delay: 0.4s;\n  }\n  \n  .animation-delay-600 {\n    animation-delay: 0.6s;\n  }\n  \n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n  \n  .animate-gradient {\n    background-size: 200% 200%;\n    animation: gradient 3s ease infinite;\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n@keyframes gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n.hero-background {\n  background-color: #F2E8CF;\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\"><defs><style>.cls-1{fill:%23F2E8CF;}</style></defs><rect class=\"cls-1\" width=\"1024\" height=\"1024\"/></svg>');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n","size_bytes":6999},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/CallToActionBlocks.tsx":{"content":"import { ShoppingBasket, Handshake, Sprout } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nconst ctaBlocks = [\n  {\n    id: 1,\n    icon: ShoppingBasket,\n    title: \"Explore Our Store\",\n    description: \"Browse our diverse collection of organic products, carefully selected from all over the country.\",\n    buttonText: \"Go to Store\",\n    buttonColor: \"bg-viet-green-dark hover:bg-viet-green-medium\",\n    iconBg: \"bg-viet-green-medium\"\n  },\n  {\n    id: 2,\n    icon: Handshake,\n    title: \"Become a Partner\",\n    description: \"Are you a farmer or an organic co-op? Join VietRoot in celebrating the value of Vietnamese produce.\",\n    buttonText: \"Learn About Partnership\",\n    buttonColor: \"bg-viet-earth-gold hover:bg-viet-earth-orange\",\n    iconBg: \"bg-viet-earth-gold\"\n  },\n  {\n    id: 3,\n    icon: Sprout,\n    title: \"VietRoot's Journal\",\n    description: \"Read our stories about farmers, cultivation processes, and healthy recipes.\",\n    buttonText: \"Read More\",\n    buttonColor: \"bg-viet-green-light hover:bg-viet-green-medium\",\n    iconBg: \"bg-viet-green-light\"\n  }\n];\n\nexport default function CallToActionBlocks() {\n  return (\n    <section className=\"py-16 md:py-24 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {ctaBlocks.map((block) => {\n            const IconComponent = block.icon;\n            return (\n              <div \n                key={block.id}\n                className=\"text-center p-8 bg-viet-earth-cream rounded-xl hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1\"\n                data-testid={`cta-block-${block.id}`}\n              >\n                <div className={`${block.iconBg} w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl`}>\n                  <IconComponent className=\"h-8 w-8\" data-testid={`icon-cta-${block.id}`} />\n                </div>\n                <h3 \n                  className=\"text-xl font-semibold text-viet-green-dark mb-4\"\n                  data-testid={`text-cta-title-${block.id}`}\n                >\n                  {block.title}\n                </h3>\n                <p \n                  className=\"text-gray-600 mb-6 leading-relaxed\"\n                  data-testid={`text-cta-description-${block.id}`}\n                >\n                  {block.description}\n                </p>\n                <Button \n                  className={`${block.buttonColor} text-white px-6 py-3 rounded-lg font-medium transition-colors duration-200`}\n                  data-testid={`button-cta-${block.id}`}\n                >\n                  {block.buttonText}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2817},"client/src/components/FeaturedProducts.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { ShoppingCart, ArrowRight, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nconst products = [\n  {\n    id: 1,\n    name: \"Dried Mango Slices\",\n    description: \"Natural sweetness, no preservatives\",\n    price: \"₫180,000\",\n    originalPrice: \"₫220,000\",\n    image: \"https://images.unsplash.com/photo-1553279030-83ba509d4d48?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Dried Mango Slices\",\n    badge: \"Bestseller\"\n  },\n  {\n    id: 2,\n    name: \"Dried Dragon Fruit\",\n    description: \"Rich in antioxidants, crispy texture\",\n    price: \"₫250,000\",\n    image: \"https://images.unsplash.com/photo-1526318472351-c75fcf070305?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Dried Dragon Fruit\",\n    badge: \"Premium\"\n  },\n  {\n    id: 3,\n    name: \"Dried Jackfruit Chips\",\n    description: \"Sweet & natural, crunchy delight\",\n    price: \"₫160,000\",\n    image: \"https://images.unsplash.com/photo-1584308972272-9e4e7685e80f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Dried Jackfruit Chips\",\n    badge: \"Organic\"\n  },\n  {\n    id: 4,\n    name: \"Dried Banana Chips\",\n    description: \"Golden crispy, naturally sweet\",\n    price: \"₫140,000\",\n    image: \"https://images.unsplash.com/photo-1571771894821-ce9b6c11b08e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    alt: \"Dried Banana Chips\",\n    badge: \"Popular\"\n  }\n];\n\nexport default function FeaturedProducts() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\n  const productsPerSlide = 3; // Show 3 products per slide for desktop, 2 for mobile\n  const totalSlides = Math.ceil(products.length / productsPerSlide);\n\n  // Auto-play functionality\n  useEffect(() => {\n    if (!isAutoPlaying) return;\n    \n    const interval = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % totalSlides);\n    }, 5000);\n    \n    return () => clearInterval(interval);\n  }, [totalSlides, isAutoPlaying]);\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % totalSlides);\n    setIsAutoPlaying(false);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + totalSlides) % totalSlides);\n    setIsAutoPlaying(false);\n  };\n\n  const goToSlide = (index: number) => {\n    setCurrentSlide(index);\n    setIsAutoPlaying(false);\n  };\n\n  return (\n    <section className=\"py-16 md:py-24 bg-gray-50 relative overflow-hidden\">\n      {/* Background Decorations */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-20 left-20 w-72 h-72 bg-viet-green-light/10 rounded-full blur-3xl animate-float\"></div>\n        <div className=\"absolute bottom-20 right-20 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-600\"></div>\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-viet-green-medium to-viet-green-dark rounded-full mb-6 animate-float shadow-2xl\">\n            <ShoppingCart className=\"h-10 w-10 text-white\" />\n          </div>\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-viet-green-dark mb-6 animate-fade-in-up\"\n            data-testid=\"text-products-title\"\n          >\n            Our Most Loved Products\n          </h2>\n          <p \n            className=\"text-xl text-gray-600 max-w-3xl mx-auto animate-fade-in-up animation-delay-200\"\n            data-testid=\"text-products-subtitle\"\n          >\n            Handpicked organic treasures from across Vietnam, bringing you the finest natural flavors\n          </p>\n          <div className=\"w-32 h-2 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold mx-auto rounded-full mt-6 animate-fade-in-up animation-delay-400 shadow-lg\"></div>\n        </div>\n        \n        {/* Universal Product Slider - All Devices */}\n        <div className=\"relative\">\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-3xl p-6 shadow-2xl border border-viet-green-light/30\">\n            <div className=\"relative overflow-hidden rounded-2xl\">\n              <div \n                className=\"flex transition-transform duration-500 ease-in-out\"\n                style={{ transform: `translateX(-${currentSlide * 100}%)` }}\n              >\n                {Array.from({ length: totalSlides }).map((_, slideIndex) => (\n                  <div key={slideIndex} className=\"w-full flex-shrink-0\">\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 px-4\">\n                      {products\n                        .slice(slideIndex * productsPerSlide, (slideIndex + 1) * productsPerSlide)\n                        .map((product) => (\n                          <div \n                            key={product.id}\n                            className=\"bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 overflow-hidden group relative border border-gray-100\"\n                            data-testid={`card-product-${product.id}`}\n                          >\n                            {/* Badge */}\n                            <div className=\"absolute top-3 left-3 z-10\">\n                              <span className=\"bg-gradient-to-r from-viet-green-medium to-viet-green-dark text-white px-3 py-1 rounded-full text-xs font-semibold shadow-md\">\n                                {product.badge}\n                              </span>\n                            </div>\n                            \n                            {/* Image Container */}\n                            <div className=\"relative overflow-hidden\">\n                              <img \n                                src={product.image} \n                                alt={product.alt}\n                                className=\"w-full h-56 object-cover group-hover:scale-110 transition-transform duration-500\"\n                                data-testid={`img-product-${product.id}`}\n                              />\n                              <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                            </div>\n                            \n                            <div className=\"p-6 space-y-4\">\n                              {/* Price Section - Moved to Top */}\n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex flex-col\">\n                                  <span \n                                    className=\"text-2xl font-bold text-viet-green-medium\"\n                                    data-testid={`text-product-price-${product.id}`}\n                                  >\n                                    {product.price}\n                                  </span>\n                                  {product.originalPrice && (\n                                    <span className=\"text-sm text-gray-400 line-through\">\n                                      {product.originalPrice}\n                                    </span>\n                                  )}\n                                </div>\n                                \n                                <Button \n                                  size=\"sm\"\n                                  className=\"bg-gradient-to-r from-viet-green-medium to-viet-green-dark hover:from-viet-green-dark hover:to-viet-green-medium text-white px-4 py-2 rounded-xl text-sm font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg\"\n                                  data-testid={`button-add-to-cart-${product.id}`}\n                                >\n                                  <ShoppingCart className=\"h-4 w-4 mr-1\" />\n                                  Add\n                                </Button>\n                              </div>\n\n                              <h3 \n                                className=\"text-lg font-bold text-gray-800 group-hover:text-viet-green-dark transition-colors duration-300\"\n                                data-testid={`text-product-name-${product.id}`}\n                              >\n                                {product.name}\n                              </h3>\n                              \n                              <p \n                                className=\"text-gray-600 text-sm leading-relaxed\"\n                                data-testid={`text-product-description-${product.id}`}\n                              >\n                                {product.description}\n                              </p>\n                            </div>\n                            \n                            {/* Hover Effect Border */}\n                            <div className=\"absolute inset-0 rounded-2xl border-2 border-viet-green-medium opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\"></div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Navigation Buttons */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={prevSlide}\n              className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/90 backdrop-blur-sm hover:bg-white text-viet-green-dark rounded-full w-12 h-12 p-0 shadow-lg hover:shadow-xl transition-all duration-300\"\n              data-testid=\"button-prev-slide\"\n            >\n              <ChevronLeft className=\"h-6 w-6\" />\n            </Button>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={nextSlide}\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/90 backdrop-blur-sm hover:bg-white text-viet-green-dark rounded-full w-12 h-12 p-0 shadow-lg hover:shadow-xl transition-all duration-300\"\n              data-testid=\"button-next-slide\"\n            >\n              <ChevronRight className=\"h-6 w-6\" />\n            </Button>\n\n            {/* Dot Indicators */}\n            <div className=\"flex justify-center space-x-3 mt-6\">\n              {Array.from({ length: totalSlides }).map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => goToSlide(index)}\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                    index === currentSlide \n                      ? 'bg-viet-green-medium scale-125 shadow-lg' \n                      : 'bg-gray-300 hover:bg-gray-400'\n                  }`}\n                  data-testid={`dot-indicator-${index}`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n        \n        {/* View All Products Button */}\n        <div className=\"text-center mt-16\">\n          <Button \n            className=\"bg-gradient-to-r from-viet-green-dark to-viet-green-medium hover:from-viet-green-medium hover:to-viet-green-dark text-white px-12 py-4 rounded-xl text-lg font-bold transition-all duration-300 transform hover:scale-105 shadow-2xl hover:shadow-3xl\"\n            data-testid=\"button-view-all-products\"\n          >\n            View All Products\n            <ArrowRight className=\"h-5 w-5 ml-3\" />\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":11570},"client/src/components/Footer.tsx":{"content":"import { Leaf, Facebook, Instagram, Twitter, MapPin, Phone, Mail } from \"lucide-react\";\n\nconst quickLinks = [\n  { name: \"About Us\", href: \"#\" },\n  { name: \"Products\", href: \"#\" },\n  { name: \"Partnership\", href: \"#\" },\n  { name: \"Blog\", href: \"#\" },\n  { name: \"Contact\", href: \"#\" }\n];\n\nconst categories = [\n  { name: \"Organic Honey\", href: \"#\" },\n  { name: \"Green Tea\", href: \"#\" },\n  { name: \"Dried Fruits\", href: \"#\" },\n  { name: \"Coconut Products\", href: \"#\" },\n  { name: \"Spices\", href: \"#\" }\n];\n\nconst socialIcons = [\n  { icon: Facebook, href: \"#\", label: \"Facebook\" },\n  { icon: Instagram, href: \"#\", label: \"Instagram\" },\n  { icon: Twitter, href: \"#\", label: \"Twitter\" }\n];\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-viet-green-dark text-white py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          \n          {/* Company Info */}\n          <div className=\"md:col-span-1\">\n            <div className=\"flex items-center mb-4\" data-testid=\"footer-logo\">\n              <Leaf className=\"text-viet-green-light h-6 w-6 mr-2\" />\n              <span className=\"font-bold text-xl\">VietRoot</span>\n            </div>\n            <p \n              className=\"text-gray-300 mb-4 leading-relaxed\"\n              data-testid=\"text-footer-description\"\n            >\n              The Root of Goodness, The Taste of Vietnam. Bringing you the finest organic products from Vietnamese farmers.\n            </p>\n            <div className=\"flex space-x-4\">\n              {socialIcons.map((social) => {\n                const IconComponent = social.icon;\n                return (\n                  <a \n                    key={social.label}\n                    href={social.href} \n                    className=\"text-gray-300 hover:text-viet-green-light transition-colors duration-200\"\n                    data-testid={`link-social-${social.label.toLowerCase()}`}\n                  >\n                    <IconComponent className=\"h-5 w-5\" />\n                  </a>\n                );\n              })}\n            </div>\n          </div>\n          \n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-footer-quicklinks-title\">Quick Links</h3>\n            <ul className=\"space-y-2\">\n              {quickLinks.map((link) => (\n                <li key={link.name}>\n                  <a \n                    href={link.href} \n                    className=\"text-gray-300 hover:text-white transition-colors duration-200\"\n                    data-testid={`link-footer-${link.name.toLowerCase().replace(' ', '-')}`}\n                  >\n                    {link.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          {/* Categories */}\n          <div>\n            <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-footer-categories-title\">Categories</h3>\n            <ul className=\"space-y-2\">\n              {categories.map((category) => (\n                <li key={category.name}>\n                  <a \n                    href={category.href} \n                    className=\"text-gray-300 hover:text-white transition-colors duration-200\"\n                    data-testid={`link-category-${category.name.toLowerCase().replace(' ', '-')}`}\n                  >\n                    {category.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          {/* Contact Info */}\n          <div>\n            <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-footer-contact-title\">Contact Info</h3>\n            <div className=\"space-y-2 text-gray-300\">\n              <p className=\"flex items-center\" data-testid=\"text-contact-address\">\n                <MapPin className=\"h-4 w-4 mr-2\" />\n                Ho Chi Minh City, Vietnam\n              </p>\n              <p className=\"flex items-center\" data-testid=\"text-contact-phone\">\n                <Phone className=\"h-4 w-4 mr-2\" />\n                +84 123 456 789\n              </p>\n              <p className=\"flex items-center\" data-testid=\"text-contact-email\">\n                <Mail className=\"h-4 w-4 mr-2\" />\n                hello@vietroot.com\n              </p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Copyright */}\n        <div className=\"border-t border-viet-green-medium mt-8 pt-8 text-center text-gray-300\">\n          <p data-testid=\"text-copyright\">&copy; 2024 VietRoot. All rights reserved. Made with ❤️ in Vietnam.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4674},"client/src/components/HeroSection.tsx":{"content":"import { ArrowRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport heroImagePath from \"@assets/image_1755787898761.png\";\n\nexport default function HeroSection() {\n  return (\n    <section \n      className=\"relative min-h-[600px] md:min-h-[700px] flex items-center bg-viet-earth-cream bg-cover bg-center bg-no-repeat\"\n      style={{\n        backgroundImage: `url(${heroImagePath})`,\n      }}\n    >\n      {/* Background overlay for better text readability */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-viet-earth-cream/20 to-viet-earth-cream/40\"></div>\n      \n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\n          {/* Left column - empty space for image */}\n          <div className=\"hidden lg:block\">\n            {/* This space is for the fruit jar image part */}\n          </div>\n          \n          {/* Right column - Text content */}\n          <div className=\"text-center lg:text-left lg:pl-8 bg-white bg-opacity-90 lg:bg-transparent p-6 lg:p-0 rounded-xl lg:rounded-none\">\n            <h1 \n              className=\"text-3xl md:text-4xl lg:text-5xl font-bold text-viet-green-dark leading-tight mb-6\"\n              data-testid=\"text-hero-title\"\n            >\n              The Root of Goodness,<br />\n              <span className=\"text-viet-earth-gold\">The Taste of Vietnam</span>\n            </h1>\n            \n            <p \n              className=\"text-lg md:text-xl text-gray-700 mb-8 leading-relaxed\"\n              data-testid=\"text-hero-description\"\n            >\n              Discover exquisite organic products, bursting with the fresh, natural flavors of our homeland.\n            </p>\n            \n            <Button \n              className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl\"\n              data-testid=\"button-discover-now\"\n            >\n              <ArrowRight className=\"h-5 w-5 mr-2\" />\n              Discover Now\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2250},"client/src/components/Mission.tsx":{"content":"import { Target, Leaf, Heart, Globe } from \"lucide-react\";\n\nexport default function Mission() {\n  return (\n    <section className=\"py-16 md:py-24 bg-gradient-to-br from-viet-green-dark to-viet-green-medium text-white overflow-hidden\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-white/20 rounded-full mb-6 animate-float\">\n            <Target className=\"h-10 w-10 text-white\" />\n          </div>\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold mb-6 animate-fade-in-up\"\n            data-testid=\"text-mission-title\"\n          >\n            Our Mission\n          </h2>\n          <div className=\"w-32 h-1 bg-gradient-to-r from-white to-viet-earth-gold mx-auto rounded-full animate-fade-in-up animation-delay-200\"></div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          {/* Left - Mission Statement */}\n          <div className=\"space-y-8 animate-fade-in-up animation-delay-400\">\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20\">\n              <h3 className=\"text-2xl font-bold mb-6 text-center\">\n                Bringing Vietnam's Natural Treasures to the World\n              </h3>\n              <p className=\"text-lg leading-relaxed text-white/90 mb-6\">\n                At VietRoot, we bridge the gap between Vietnam's rich agricultural heritage and global consumers who value authenticity, quality, and sustainability. We empower local farmers while delivering premium organic products that tell the story of our beautiful homeland.\n              </p>\n              <p className=\"text-lg leading-relaxed text-white/90\">\n                Every product we offer carries the essence of Vietnamese soil, the dedication of our farmers, and our unwavering commitment to preserving traditional farming methods for future generations.\n              </p>\n            </div>\n          </div>\n          \n          {/* Right - Mission Values */}\n          <div className=\"space-y-6 animate-fade-in-up animation-delay-600\">\n            <div className=\"flex items-start space-x-4 bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 hover:bg-white/20 transition-all duration-300 group\">\n              <div className=\"flex-shrink-0 w-12 h-12 bg-white/20 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                <Leaf className=\"h-6 w-6 text-white\" />\n              </div>\n              <div>\n                <h4 className=\"text-xl font-semibold mb-2\">Sustainable Agriculture</h4>\n                <p className=\"text-white/80\">Supporting eco-friendly farming practices that preserve our environment for future generations.</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-4 bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 hover:bg-white/20 transition-all duration-300 group\">\n              <div className=\"flex-shrink-0 w-12 h-12 bg-white/20 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                <Heart className=\"h-6 w-6 text-white\" />\n              </div>\n              <div>\n                <h4 className=\"text-xl font-semibold mb-2\">Farmer Empowerment</h4>\n                <p className=\"text-white/80\">Creating fair trade opportunities that improve livelihoods and strengthen rural communities.</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-4 bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 hover:bg-white/20 transition-all duration-300 group\">\n              <div className=\"flex-shrink-0 w-12 h-12 bg-white/20 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                <Globe className=\"h-6 w-6 text-white\" />\n              </div>\n              <div>\n                <h4 className=\"text-xl font-semibold mb-2\">Global Reach</h4>\n                <p className=\"text-white/80\">Sharing Vietnam's natural bounty with health-conscious consumers around the world.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":4391},"client/src/components/Navigation.tsx":{"content":"import { Leaf, ShoppingCart, Menu } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Navigation() {\n  return (\n    <nav className=\"bg-white shadow-sm sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center\" data-testid=\"nav-logo\">\n            <a href=\"/\" className=\"flex-shrink-0 flex items-center\">\n              <Leaf className=\"text-viet-green-medium h-6 w-6 mr-2\" />\n              <span className=\"font-bold text-xl text-viet-green-dark\">VietRoot</span>\n            </a>\n          </div>\n          \n          {/* Desktop Menu */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-2\">\n              <a \n                href=\"/\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-home\"\n              >\n                <span className=\"relative z-10\">Home</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n              <a \n                href=\"/products\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-products\"\n              >\n                <span className=\"relative z-10\">Products</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n              <a \n                href=\"/about\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-about\"\n              >\n                <span className=\"relative z-10\">About Us</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n              <a \n                href=\"/impact\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-impact\"\n              >\n                <span className=\"relative z-10\">Impact</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n              <a \n                href=\"/partnerships\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-partnerships\"\n              >\n                <span className=\"relative z-10\">Partnership</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n              <a \n                href=\"/blog\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-blog\"\n              >\n                <span className=\"relative z-10\">Blog</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n              <a \n                href=\"/contact\" \n                className=\"relative text-gray-700 hover:text-viet-green-medium transition-all duration-300 px-4 py-2 text-sm font-medium group\"\n                data-testid=\"nav-contact\"\n              >\n                <span className=\"relative z-10\">Contact</span>\n                <div className=\"absolute bottom-0 left-1/2 w-0 h-0.5 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold transform -translate-x-1/2 group-hover:w-full transition-all duration-300 ease-out\"></div>\n              </a>\n            </div>\n          </div>\n          \n          {/* Cart and Mobile Menu */}\n          <div className=\"flex items-center space-x-4\">\n            <Button \n              className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 flex items-center\"\n              data-testid=\"button-cart\"\n            >\n              <ShoppingCart className=\"h-4 w-4 mr-2\" />\n              <span className=\"hidden sm:inline\">Cart</span>\n            </Button>\n            {/* Mobile menu button */}\n            <Button \n              variant=\"ghost\" \n              size=\"sm\"\n              className=\"md:hidden text-gray-700 hover:text-viet-green-medium\"\n              data-testid=\"button-mobile-menu\"\n            >\n              <Menu className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":5628},"client/src/components/NewsletterSignup.tsx":{"content":"import { useState } from \"react\";\nimport { Mail, Phone, User } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function NewsletterSignup() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      toast({\n        title: \"Subscribed successfully!\",\n        description: \"Welcome to the VietRoot family. We'll keep you updated with our latest news and offers.\",\n      });\n      setFormData({ name: \"\", email: \"\", phone: \"\" });\n      setIsSubmitting(false);\n    }, 1000);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return (\n    <section className=\"py-16 md:py-24 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n      {/* Decorative Background Elements */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-0 left-0 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n        <div className=\"absolute bottom-0 right-0 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-white/5 rounded-full blur-2xl\"></div>\n      </div>\n      \n      <div className=\"relative max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-white/20 backdrop-blur-sm rounded-full mb-6 animate-float\">\n            <Mail className=\"h-10 w-10 text-white\" />\n          </div>\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold mb-6 animate-fade-in-up\"\n            data-testid=\"text-newsletter-title\"\n          >\n            Join the VietRoot Family\n          </h2>\n          <p \n            className=\"text-xl text-white/90 mb-8 max-w-3xl mx-auto leading-relaxed animate-fade-in-up animation-delay-200\"\n            data-testid=\"text-newsletter-description\"\n          >\n            Be the first to discover new products, get exclusive offers, and hear inspiring stories from our farming communities across Vietnam.\n          </p>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-3xl p-8 md:p-12 border border-white/20 shadow-2xl animate-fade-in-up animation-delay-400\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"group relative\">\n                  <User className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5 transition-colors duration-300 group-focus-within:text-viet-green-medium\" />\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Your full name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                    className=\"pl-12 py-4 bg-white/90 backdrop-blur-sm text-gray-900 placeholder-gray-500 border border-white/30 rounded-xl transition-all duration-300 focus:bg-white focus:border-viet-green-medium focus:ring-2 focus:ring-viet-green-medium/20 hover:bg-white/95\"\n                    data-testid=\"input-newsletter-name\"\n                  />\n                </div>\n                \n                <div className=\"group relative\">\n                  <Mail className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5 transition-colors duration-300 group-focus-within:text-viet-green-medium\" />\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Your email address\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    className=\"pl-12 py-4 bg-white/90 backdrop-blur-sm text-gray-900 placeholder-gray-500 border border-white/30 rounded-xl transition-all duration-300 focus:bg-white focus:border-viet-green-medium focus:ring-2 focus:ring-viet-green-medium/20 hover:bg-white/95\"\n                    data-testid=\"input-newsletter-email\"\n                  />\n                </div>\n                \n                <div className=\"group relative\">\n                  <Phone className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5 transition-colors duration-300 group-focus-within:text-viet-green-medium\" />\n                  <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    placeholder=\"Your phone number\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    className=\"pl-12 py-4 bg-white/90 backdrop-blur-sm text-gray-900 placeholder-gray-500 border border-white/30 rounded-xl transition-all duration-300 focus:bg-white focus:border-viet-green-medium focus:ring-2 focus:ring-viet-green-medium/20 hover:bg-white/95\"\n                    data-testid=\"input-newsletter-phone\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"text-center\">\n                <Button \n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"bg-gradient-to-r from-viet-earth-gold to-viet-earth-orange hover:from-viet-earth-orange hover:to-viet-earth-gold text-white px-12 py-4 rounded-xl text-lg font-bold transition-all duration-300 transform hover:scale-105 shadow-2xl hover:shadow-3xl disabled:opacity-50 disabled:transform-none group\"\n                  data-testid=\"button-newsletter-subscribe\"\n                >\n                  <span className=\"flex items-center\">\n                    {isSubmitting ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-3\"></div>\n                        Subscribing...\n                      </>\n                    ) : (\n                      <>\n                        <Mail className=\"h-5 w-5 mr-3 group-hover:animate-bounce\" />\n                        Subscribe Now\n                      </>\n                    )}\n                  </span>\n                </Button>\n              </div>\n              \n              <p className=\"text-center text-white/70 text-sm\">\n                📧 Get weekly updates • 🎁 Exclusive discounts • 📖 Farmer stories • 🌱 Sustainability tips\n              </p>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7088},"client/src/components/QuickIntro.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Search, Leaf, Users, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nconst images = [\n  {\n    url: \"https://images.unsplash.com/photo-1500937386664-56d1dfef3854?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Vietnamese farmer with fresh organic produce\",\n    caption: \"Our dedicated farmers working in organic fields\"\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1560114928-40f1f1eb26a0?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Traditional Vietnamese farming methods\",\n    caption: \"Traditional farming methods passed down generations\"\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1571168507631-6b5b6c0b0c00?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Organic vegetables harvest\",\n    caption: \"Fresh organic harvest from Vietnamese soil\"\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1593113598332-cd288d649433?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n    alt: \"Tea plantation in mountains\",\n    caption: \"Tea plantations in the misty mountains of Vietnam\"\n  }\n];\n\nexport default function QuickIntro() {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  // Auto-play slider\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImageIndex((prev) => (prev + 1) % images.length);\n    }, 4000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const nextImage = () => {\n    setCurrentImageIndex((prev) => (prev + 1) % images.length);\n  };\n\n  const prevImage = () => {\n    setCurrentImageIndex((prev) => (prev - 1 + images.length) % images.length);\n  };\n\n  return (\n    <section className=\"py-20 md:py-32 bg-gradient-to-br from-viet-earth-cream via-white to-viet-green-light/20 relative overflow-hidden\">\n      {/* Background Decorations */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute top-10 left-10 w-64 h-64 bg-viet-green-medium/5 rounded-full blur-3xl animate-float\"></div>\n        <div className=\"absolute bottom-10 right-10 w-80 h-80 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n        <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-viet-green-light/20 rounded-full blur-2xl\"></div>\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center justify-center w-24 h-24 bg-gradient-to-br from-viet-green-medium to-viet-green-dark rounded-full mb-8 animate-float shadow-2xl\">\n            <Leaf className=\"h-12 w-12 text-white\" />\n          </div>\n          <h2 \n            className=\"text-4xl md:text-6xl font-bold text-viet-green-dark mb-6 animate-fade-in-up\"\n            data-testid=\"text-intro-title\"\n          >\n            VietRoot: Where the Essence of \n            <span className=\"block bg-gradient-to-r from-viet-green-medium to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n              Vietnam Converges\n            </span>\n          </h2>\n          <div className=\"w-32 h-2 bg-gradient-to-r from-viet-green-medium via-viet-earth-gold to-viet-green-medium mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg\"></div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-16 items-center\">\n          {/* Left Column - Letter Style Story */}\n          <div className=\"space-y-8 animate-fade-in-up animation-delay-400\">\n            <div className=\"bg-white/90 backdrop-blur-sm rounded-3xl p-10 shadow-2xl border border-viet-green-light/30 relative overflow-hidden\">\n              <div className=\"absolute top-0 right-0 w-32 h-32 bg-viet-green-medium/5 rounded-full -translate-y-16 translate-x-16\"></div>\n              \n              {/* Letter Header */}\n              <div className=\"relative mb-8\">\n                <div className=\"text-center mb-6\">\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-viet-green-medium to-viet-green-dark rounded-full mb-4 shadow-lg\">\n                    <Leaf className=\"h-8 w-8 text-white\" />\n                  </div>\n                  <p className=\"text-sm text-gray-500 italic\">A Letter from VietRoot</p>\n                </div>\n                \n                <h3 className=\"text-2xl font-bold text-viet-green-dark mb-6 text-center font-serif\">\n                  Our Story, Our Promise\n                </h3>\n              </div>\n              \n              {/* Letter Content */}\n              <div className=\"relative space-y-6 text-gray-700\">\n                <p className=\"text-lg leading-relaxed font-medium italic\">\n                  \"Dear Friends,\"\n                </p>\n                \n                <div \n                  className=\"text-lg leading-relaxed space-y-4\"\n                  data-testid=\"text-intro-description\"\n                >\n                  <p>\n                    VietRoot was born from a simple yet profound realization: in our rush toward modernization, we were losing touch with the very essence that makes Vietnamese agriculture extraordinary.\n                  </p>\n                  \n                  <p>\n                    Three years ago, I walked through my grandmother's abandoned rice fields in the Mekong Delta. The soil that once fed our family for generations lay dormant, replaced by industrial farming methods that prioritized quantity over quality. That moment changed everything.\n                  </p>\n                  \n                  <p>\n                    Today, VietRoot connects you directly with passionate farmers who still believe in the old ways - organic, sustainable, and filled with love. Every product tells a story of dedication, from the misty mountains of Sapa to the fertile deltas of the South.\n                  </p>\n                  \n                  <p className=\"italic\">\n                    We invite you to taste the difference that authenticity makes, to experience flavors that carry the soul of Vietnam in every bite.\n                  </p>\n                </div>\n                \n                <div className=\"text-right mt-8\">\n                  <p className=\"text-lg font-semibold text-viet-green-dark\">\n                    With gratitude,\n                  </p>\n                  <p className=\"text-lg font-bold text-viet-green-dark\">\n                    The VietRoot Family\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Right Column - Image Slider */}\n          <div className=\"lg:order-last animate-fade-in-up animation-delay-600\">\n            <div className=\"relative bg-white/90 backdrop-blur-sm rounded-3xl p-4 shadow-2xl border border-viet-green-light/30\">\n              <div className=\"relative h-96 rounded-2xl overflow-hidden\">\n                {images.map((image, index) => (\n                  <div\n                    key={index}\n                    className={`absolute inset-0 transition-all duration-700 ease-in-out ${\n                      index === currentImageIndex \n                        ? 'opacity-100 scale-100' \n                        : 'opacity-0 scale-110'\n                    }`}\n                  >\n                    <img \n                      src={image.url} \n                      alt={image.alt}\n                      className=\"w-full h-full object-cover rounded-2xl\"\n                      data-testid={`img-farmer-${index}`}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-2xl\"></div>\n                    <div className=\"absolute bottom-4 left-4 right-4\">\n                      <p className=\"text-white font-semibold text-lg drop-shadow-lg\">\n                        {image.caption}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n                \n                {/* Navigation Buttons */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={prevImage}\n                  className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white rounded-full w-10 h-10 p-0 transition-all duration-300\"\n                  data-testid=\"button-prev-image\"\n                >\n                  <ChevronLeft className=\"h-5 w-5\" />\n                </Button>\n                \n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={nextImage}\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white rounded-full w-10 h-10 p-0 transition-all duration-300\"\n                  data-testid=\"button-next-image\"\n                >\n                  <ChevronRight className=\"h-5 w-5\" />\n                </Button>\n              </div>\n              \n              {/* Dot Indicators */}\n              <div className=\"flex justify-center space-x-2 mt-6\">\n                {images.map((_, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentImageIndex(index)}\n                    className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                      index === currentImageIndex \n                        ? 'bg-viet-green-medium scale-125 shadow-lg' \n                        : 'bg-gray-300 hover:bg-gray-400'\n                    }`}\n                    data-testid={`dot-indicator-${index}`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":9801},"client/src/components/Vision.tsx":{"content":"import { Eye, TrendingUp, Award, Users2 } from \"lucide-react\";\n\nconst visionGoals = [\n  {\n    icon: Award,\n    title: \"Market Leader\",\n    description: \"Become the most trusted brand for Vietnamese organic products globally by 2030.\"\n  },\n  {\n    icon: Users2,\n    title: \"Community Impact\",\n    description: \"Partner with 1,000+ farmers and support 10,000+ rural families across Vietnam.\"\n  },\n  {\n    icon: TrendingUp,\n    title: \"Sustainable Growth\", \n    description: \"Achieve carbon-neutral operations while maintaining 100% organic certification.\"\n  }\n];\n\nexport default function Vision() {\n  return (\n    <section className=\"py-16 md:py-24 bg-white relative overflow-hidden\">\n      {/* Decorative Background */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-viet-earth-cream to-white opacity-50\"></div>\n      <div className=\"absolute top-0 right-0 w-96 h-96 bg-viet-green-light/10 rounded-full blur-3xl\"></div>\n      <div className=\"absolute bottom-0 left-0 w-64 h-64 bg-viet-earth-gold/10 rounded-full blur-3xl\"></div>\n      \n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-viet-green-medium to-viet-green-dark rounded-full mb-6 animate-float shadow-xl\">\n            <Eye className=\"h-10 w-10 text-white\" />\n          </div>\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-viet-green-dark mb-6 animate-fade-in-up\"\n            data-testid=\"text-vision-title\"\n          >\n            Our Vision\n          </h2>\n          <div className=\"w-32 h-1 bg-gradient-to-r from-viet-green-medium to-viet-earth-gold mx-auto rounded-full animate-fade-in-up animation-delay-200\"></div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n          {/* Left - Vision Statement */}\n          <div className=\"space-y-8 animate-fade-in-up animation-delay-400\">\n            <div className=\"bg-gradient-to-br from-white to-viet-earth-cream rounded-3xl p-8 shadow-2xl border border-viet-green-light/20 relative overflow-hidden\">\n              <div className=\"absolute top-0 right-0 w-32 h-32 bg-viet-green-medium/5 rounded-full -translate-y-16 translate-x-16\"></div>\n              <div className=\"relative\">\n                <h3 className=\"text-3xl font-bold text-viet-green-dark mb-6 text-center\">\n                  A World Connected by Nature's Goodness\n                </h3>\n                <div className=\"space-y-6 text-lg text-gray-700 leading-relaxed\">\n                  <p>\n                    We envision a future where Vietnamese organic products are recognized worldwide as symbols of quality, authenticity, and sustainable agriculture.\n                  </p>\n                  <p>\n                    Through innovation and tradition, we will create a global network that honors our farmers, protects our environment, and nourishes communities across continents.\n                  </p>\n                  <div className=\"bg-viet-green-medium/10 rounded-xl p-6 border-l-4 border-viet-green-medium\">\n                    <p className=\"font-semibold text-viet-green-dark italic\">\n                      \"To be the bridge that brings Vietnam's agricultural heritage to every table in the world, creating prosperity for our farmers and wellness for our customers.\"\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Right - Vision Goals */}\n          <div className=\"space-y-8 animate-fade-in-up animation-delay-600\">\n            <h3 className=\"text-2xl font-bold text-viet-green-dark text-center mb-8\">\n              Our 2030 Goals\n            </h3>\n            \n            <div className=\"space-y-6\">\n              {visionGoals.map((goal, index) => {\n                const IconComponent = goal.icon;\n                return (\n                  <div \n                    key={index}\n                    className=\"group bg-white rounded-2xl p-6 shadow-lg hover:shadow-2xl transition-all duration-500 border border-gray-100 hover:border-viet-green-medium/30 relative overflow-hidden\"\n                    style={{ animationDelay: `${(index + 1) * 200}ms` }}\n                  >\n                    <div className=\"absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-viet-green-medium/10 to-viet-earth-gold/10 rounded-full -translate-y-10 translate-x-10 group-hover:scale-150 transition-transform duration-500\"></div>\n                    \n                    <div className=\"relative flex items-start space-x-4\">\n                      <div className=\"flex-shrink-0 w-14 h-14 bg-gradient-to-br from-viet-green-medium to-viet-green-dark rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-lg\">\n                        <IconComponent className=\"h-7 w-7 text-white\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h4 className=\"text-xl font-bold text-viet-green-dark mb-2 group-hover:text-viet-green-medium transition-colors duration-300\">\n                          {goal.title}\n                        </h4>\n                        <p className=\"text-gray-600 leading-relaxed\">\n                          {goal.description}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5617},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { Users, Target, Clock, Heart } from \"lucide-react\";\n\nconst milestones = [\n  {\n    year: \"2018\",\n    title: \"The Beginning\",\n    description: \"VietRoot was founded with a simple dream: to bring the authentic taste of Vietnam to the world while supporting local farmers.\"\n  },\n  {\n    year: \"2020\",\n    title: \"Growing Network\",\n    description: \"Partnered with over 50 organic farms across Vietnam, establishing a reliable supply chain of premium products.\"\n  },\n  {\n    year: \"2022\",\n    title: \"Global Expansion\",\n    description: \"Launched international shipping and established partnerships with retailers in Southeast Asia.\"\n  },\n  {\n    year: \"2024\",\n    title: \"Future Vision\",\n    description: \"Expanding to serve customers worldwide while maintaining our commitment to sustainability and quality.\"\n  }\n];\n\nexport default function About() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n        {/* Background Decorations */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white/10 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white/20 backdrop-blur-sm rounded-full mb-8 animate-float shadow-2xl\">\n              <Heart className=\"h-12 w-12 text-white\" />\n            </div>\n            <h1 \n              className=\"text-5xl md:text-7xl font-bold mb-8 animate-fade-in-up\"\n              data-testid=\"text-about-hero-title\"\n            >\n              Our\n              <span className=\"block bg-gradient-to-r from-white to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n                Story\n              </span>\n            </h1>\n            <div className=\"w-32 h-2 bg-gradient-to-r from-white via-viet-earth-gold to-white mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg mb-8\"></div>\n            <p \n              className=\"text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400\"\n              data-testid=\"text-about-hero-description\"\n            >\n              Rooted in Vietnam. Growing for the World. <br />\n              From Vietnamese soil to global tables, our journey is one of passion, tradition, and unwavering commitment to authenticity.\n            </p>\n          </div>\n\n          {/* Values Preview */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 animate-fade-in-up animation-delay-600\">\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <Target className=\"h-8 w-8 text-white mx-auto mb-3\" />\n              <div className=\"text-lg font-bold text-white mb-2\">Quality First</div>\n              <div className=\"text-white/80 text-sm\">Premium organic products</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <Users className=\"h-8 w-8 text-white mx-auto mb-3\" />\n              <div className=\"text-lg font-bold text-white mb-2\">Community</div>\n              <div className=\"text-white/80 text-sm\">Supporting local farmers</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <Heart className=\"h-8 w-8 text-white mx-auto mb-3\" />\n              <div className=\"text-lg font-bold text-white mb-2\">Heritage</div>\n              <div className=\"text-white/80 text-sm\">Vietnamese traditions</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 \n                className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-6\"\n                data-testid=\"text-story-title\"\n              >\n                Born from Vietnamese Soil\n              </h2>\n              <div className=\"space-y-4 text-lg text-gray-700\">\n                <p data-testid=\"text-story-paragraph-1\">\n                  VietRoot began as a passion project in the heart of Vietnam's agricultural regions. Our founders, deeply connected to the land and its traditions, witnessed the incredible quality of organic products grown by local farmers.\n                </p>\n                <p data-testid=\"text-story-paragraph-2\">\n                  We saw an opportunity to bridge the gap between these dedicated farmers and conscious consumers around the world. Our mission became clear: to create a sustainable platform that honors Vietnamese agricultural heritage while meeting the growing global demand for authentic, organic products.\n                </p>\n                <p data-testid=\"text-story-paragraph-3\">\n                  Today, VietRoot stands as a testament to the power of community, quality, and cultural authenticity. Every product we offer tells a story of Vietnamese craftsmanship and natural excellence.\n                </p>\n              </div>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1560114928-40f1f1eb26a0?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Vietnamese farmers working in organic fields\" \n                className=\"rounded-xl shadow-lg w-full\"\n                data-testid=\"img-story\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Founder's Note */}\n      <section className=\"py-16 md:py-24 bg-viet-earth-cream\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"bg-white rounded-xl p-8 md:p-12 shadow-lg\">\n            <Heart className=\"text-viet-green-medium h-12 w-12 mx-auto mb-6\" />\n            <h2 \n              className=\"text-2xl md:text-3xl font-bold text-viet-green-dark mb-6\"\n              data-testid=\"text-founder-title\"\n            >\n              A Personal Message from Our Founder\n            </h2>\n            <blockquote \n              className=\"text-lg text-gray-700 italic leading-relaxed mb-6\"\n              data-testid=\"text-founder-message\"\n            >\n              \"Growing up in rural Vietnam, I learned that the best products come from the heart. Every farmer we partner with shares our commitment to quality and sustainability. VietRoot is more than a business – it's our way of sharing Vietnam's natural treasures with the world while ensuring our farmers receive fair compensation for their dedication.\"\n            </blockquote>\n            <p \n              className=\"font-semibold text-viet-green-dark\"\n              data-testid=\"text-founder-name\"\n            >\n              — Nguyen Minh, Founder & CEO\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Vision Timeline */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-timeline-title\"\n            >\n              Our Journey\n            </h2>\n            <p \n              className=\"text-lg text-gray-600\"\n              data-testid=\"text-timeline-subtitle\"\n            >\n              From local passion to global mission\n            </p>\n          </div>\n          \n          <div className=\"space-y-8\">\n            {milestones.map((milestone, index) => (\n              <div \n                key={milestone.year}\n                className={`flex flex-col md:flex-row items-center gap-8 ${index % 2 === 1 ? 'md:flex-row-reverse' : ''}`}\n                data-testid={`milestone-${milestone.year}`}\n              >\n                <div className=\"md:w-1/2\">\n                  <div className=\"bg-viet-green-dark text-white rounded-full w-16 h-16 flex items-center justify-center text-xl font-bold mb-4 mx-auto md:mx-0\">\n                    {milestone.year}\n                  </div>\n                  <h3 \n                    className=\"text-xl font-semibold text-viet-green-dark mb-2 text-center md:text-left\"\n                    data-testid={`text-milestone-title-${milestone.year}`}\n                  >\n                    {milestone.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-700 text-center md:text-left\"\n                    data-testid={`text-milestone-description-${milestone.year}`}\n                  >\n                    {milestone.description}\n                  </p>\n                </div>\n                <div className=\"md:w-1/2\">\n                  <div className=\"bg-viet-earth-cream rounded-xl p-8 text-center\">\n                    <Clock className=\"text-viet-green-medium h-12 w-12 mx-auto\" />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-16 md:py-24 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-values-section-title\"\n            >\n              What Drives Us\n            </h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center p-6 bg-white rounded-xl shadow-lg\">\n              <Target className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-viet-green-dark mb-3\">Quality First</h3>\n              <p className=\"text-gray-600\">Every product is carefully selected and tested to meet our high standards.</p>\n            </div>\n            \n            <div className=\"text-center p-6 bg-white rounded-xl shadow-lg\">\n              <Users className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-viet-green-dark mb-3\">Community Impact</h3>\n              <p className=\"text-gray-600\">Supporting local farmers and sustainable agricultural practices.</p>\n            </div>\n            \n            <div className=\"text-center p-6 bg-white rounded-xl shadow-lg\">\n              <Heart className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-viet-green-dark mb-3\">Cultural Heritage</h3>\n              <p className=\"text-gray-600\">Preserving and sharing the rich agricultural traditions of Vietnam.</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":11579},"client/src/pages/blog.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { useState } from \"react\";\nimport { Calendar, User, ArrowRight, Search, Tag } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst categories = [\n  { id: \"all\", name: \"All Posts\", count: 12 },\n  { id: \"wellness\", name: \"Wellness Tips\", count: 4 },\n  { id: \"farmers\", name: \"Farmer Stories\", count: 3 },\n  { id: \"culture\", name: \"Vietnamese Culture\", count: 3 },\n  { id: \"sustainability\", name: \"Sustainability\", count: 2 }\n];\n\nconst blogPosts = [\n  {\n    id: 1,\n    title: \"The Ancient Art of Vietnamese Tea Ceremony\",\n    excerpt: \"Discover the cultural significance and health benefits of traditional Vietnamese tea ceremonies, passed down through generations.\",\n    content: \"Vietnamese tea culture dates back over 1,000 years...\",\n    author: \"Mai Nguyen\",\n    date: \"2024-03-15\",\n    category: \"culture\",\n    image: \"https://images.unsplash.com/photo-1544787219-7f47ccb76574?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    tags: [\"Tea\", \"Culture\", \"Tradition\"],\n    readTime: \"5 min read\"\n  },\n  {\n    id: 2,\n    title: \"Meet Farmer Duc: Guardian of Wild Honey Traditions\",\n    excerpt: \"Learn about Nguyen Van Duc's family legacy of wild honey harvesting in the pristine mountains of Ha Giang province.\",\n    content: \"High in the mountains of Ha Giang, Nguyen Van Duc continues a tradition...\",\n    author: \"VietRoot Team\",\n    date: \"2024-03-10\",\n    category: \"farmers\",\n    image: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    tags: [\"Farmers\", \"Honey\", \"Ha Giang\"],\n    readTime: \"7 min read\"\n  },\n  {\n    id: 3,\n    title: \"Turmeric: The Golden Root of Wellness\",\n    excerpt: \"Explore the incredible health benefits of Vietnamese turmeric and how to incorporate this powerful spice into your daily routine.\",\n    content: \"Turmeric has been used in Vietnamese traditional medicine for centuries...\",\n    author: \"Dr. Linh Pham\",\n    date: \"2024-03-08\",\n    category: \"wellness\",\n    image: \"https://images.unsplash.com/photo-1615485499601-773e0eb7f0f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    tags: [\"Turmeric\", \"Health\", \"Wellness\"],\n    readTime: \"6 min read\"\n  },\n  {\n    id: 4,\n    title: \"Sustainable Farming: Our Commitment to the Earth\",\n    excerpt: \"How VietRoot partners with farmers to promote organic, sustainable agricultural practices that benefit both people and planet.\",\n    content: \"Sustainability isn't just a buzzword for us – it's our commitment...\",\n    author: \"Minh Nguyen\",\n    date: \"2024-03-05\",\n    category: \"sustainability\",\n    image: \"https://images.unsplash.com/photo-1500937386664-56d1dfef3854?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    tags: [\"Sustainability\", \"Organic\", \"Farming\"],\n    readTime: \"8 min read\"\n  },\n  {\n    id: 5,\n    title: \"5 Ways to Boost Your Immunity Naturally\",\n    excerpt: \"Discover natural ways to strengthen your immune system using traditional Vietnamese herbs and organic products.\",\n    content: \"In Vietnamese traditional medicine, prevention is always better than cure...\",\n    author: \"Dr. Linh Pham\",\n    date: \"2024-03-01\",\n    category: \"wellness\",\n    image: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    tags: [\"Immunity\", \"Health\", \"Natural\"],\n    readTime: \"4 min read\"\n  },\n  {\n    id: 6,\n    title: \"The Story Behind Our Organic Green Tea\",\n    excerpt: \"Journey to the tea gardens of Thai Nguyen and meet the farmers who grow our premium organic green tea.\",\n    content: \"The misty mountains of Thai Nguyen province are home to some of Vietnam's finest tea...\",\n    author: \"VietRoot Team\",\n    date: \"2024-02-28\",\n    category: \"farmers\",\n    image: \"https://images.unsplash.com/photo-1556679343-c7306c1976bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    tags: [\"Tea\", \"Farmers\", \"Thai Nguyen\"],\n    readTime: \"6 min read\"\n  }\n];\n\nexport default function Blog() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const filteredPosts = blogPosts.filter(post => {\n    const matchesCategory = selectedCategory === \"all\" || post.category === selectedCategory;\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\n    return matchesCategory && matchesSearch;\n  });\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n        {/* Background Decorations */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white/10 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white/20 backdrop-blur-sm rounded-full mb-8 animate-float shadow-2xl\">\n              <User className=\"h-12 w-12 text-white\" />\n            </div>\n            <h1 \n              className=\"text-5xl md:text-7xl font-bold mb-8 animate-fade-in-up\"\n              data-testid=\"text-blog-hero-title\"\n            >\n              VietRoot's\n              <span className=\"block bg-gradient-to-r from-white to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n                Journal\n              </span>\n            </h1>\n            <div className=\"w-32 h-2 bg-gradient-to-r from-white via-viet-earth-gold to-white mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg mb-8\"></div>\n            <p \n              className=\"text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400\"\n              data-testid=\"text-blog-hero-description\"\n            >\n              Stories from our farms, wellness tips, cultural insights, and everything about authentic Vietnamese organic products. Discover the knowledge behind every harvest.\n            </p>\n          </div>\n\n          {/* Blog Categories Preview */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 animate-fade-in-up animation-delay-600\">\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <div className=\"text-lg font-bold text-white mb-1\">Wellness</div>\n              <div className=\"text-white/80 text-sm\">Health tips</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <div className=\"text-lg font-bold text-white mb-1\">Farmers</div>\n              <div className=\"text-white/80 text-sm\">Their stories</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <div className=\"text-lg font-bold text-white mb-1\">Culture</div>\n              <div className=\"text-white/80 text-sm\">Vietnamese heritage</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <div className=\"text-lg font-bold text-white mb-1\">Sustainability</div>\n              <div className=\"text-white/80 text-sm\">Eco practices</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Search and Filter */}\n      <section className=\"py-12 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex flex-col md:flex-row gap-6 items-center justify-between\">\n            \n            {/* Search */}\n            <div className=\"relative w-full md:w-96\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Search articles...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-12 py-3\"\n                data-testid=\"input-search-blog\"\n              />\n            </div>\n\n            {/* Category Filter */}\n            <div className=\"flex flex-wrap gap-2\">\n              {categories.map((category) => (\n                <Button\n                  key={category.id}\n                  variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category.id)}\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors duration-200 ${\n                    selectedCategory === category.id \n                      ? 'bg-viet-green-medium text-white' \n                      : 'text-viet-green-dark border-viet-green-medium hover:bg-viet-green-light'\n                  }`}\n                  data-testid={`filter-category-${category.id}`}\n                >\n                  {category.name} ({category.count})\n                </Button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Post */}\n      {filteredPosts.length > 0 && (\n        <section className=\"py-12 bg-gray-50\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2\">\n                <div className=\"h-64 lg:h-auto\">\n                  <img \n                    src={filteredPosts[0].image} \n                    alt={filteredPosts[0].title}\n                    className=\"w-full h-full object-cover\"\n                    data-testid=\"featured-post-image\"\n                  />\n                </div>\n                <div className=\"p-8 lg:p-12\">\n                  <div className=\"flex items-center mb-4\">\n                    <Badge className=\"bg-viet-green-medium text-white mr-3\">\n                      Featured\n                    </Badge>\n                    <span \n                      className=\"text-sm text-gray-500\"\n                      data-testid=\"featured-post-read-time\"\n                    >\n                      {filteredPosts[0].readTime}\n                    </span>\n                  </div>\n                  \n                  <h2 \n                    className=\"text-2xl md:text-3xl font-bold text-viet-green-dark mb-4\"\n                    data-testid=\"featured-post-title\"\n                  >\n                    {filteredPosts[0].title}\n                  </h2>\n                  \n                  <p \n                    className=\"text-gray-700 mb-6 text-lg leading-relaxed\"\n                    data-testid=\"featured-post-excerpt\"\n                  >\n                    {filteredPosts[0].excerpt}\n                  </p>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center text-sm text-gray-500\">\n                      <User className=\"h-4 w-4 mr-2\" />\n                      <span data-testid=\"featured-post-author\">{filteredPosts[0].author}</span>\n                      <Calendar className=\"h-4 w-4 ml-4 mr-2\" />\n                      <span data-testid=\"featured-post-date\">{formatDate(filteredPosts[0].date)}</span>\n                    </div>\n                    \n                    <Button \n                      className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white\"\n                      data-testid=\"featured-post-read-more\"\n                    >\n                      Read More\n                      <ArrowRight className=\"h-4 w-4 ml-2\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Blog Posts Grid */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {filteredPosts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500 text-lg\">No articles found matching your search.</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {filteredPosts.slice(1).map((post) => (\n                <article \n                  key={post.id}\n                  className=\"bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 overflow-hidden\"\n                  data-testid={`blog-post-${post.id}`}\n                >\n                  <img \n                    src={post.image} \n                    alt={post.title}\n                    className=\"w-full h-48 object-cover\"\n                    data-testid={`blog-image-${post.id}`}\n                  />\n                  \n                  <div className=\"p-6\">\n                    <div className=\"flex items-center mb-3\">\n                      <span \n                        className=\"text-xs text-gray-500\"\n                        data-testid={`blog-read-time-${post.id}`}\n                      >\n                        {post.readTime}\n                      </span>\n                      <div className=\"flex gap-1 ml-auto\">\n                        {post.tags.slice(0, 2).map((tag, index) => (\n                          <Badge \n                            key={index}\n                            variant=\"outline\"\n                            className=\"text-xs border-viet-green-medium text-viet-green-medium\"\n                            data-testid={`blog-tag-${post.id}-${index}`}\n                          >\n                            {tag}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    <h3 \n                      className=\"text-lg font-semibold text-gray-800 mb-3 line-clamp-2\"\n                      data-testid={`blog-title-${post.id}`}\n                    >\n                      {post.title}\n                    </h3>\n                    \n                    <p \n                      className=\"text-gray-600 text-sm mb-4 line-clamp-3\"\n                      data-testid={`blog-excerpt-${post.id}`}\n                    >\n                      {post.excerpt}\n                    </p>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center text-xs text-gray-500\">\n                        <User className=\"h-3 w-3 mr-1\" />\n                        <span data-testid={`blog-author-${post.id}`}>{post.author}</span>\n                        <Calendar className=\"h-3 w-3 ml-3 mr-1\" />\n                        <span data-testid={`blog-date-${post.id}`}>{formatDate(post.date)}</span>\n                      </div>\n                      \n                      <Button \n                        size=\"sm\"\n                        variant=\"ghost\"\n                        className=\"text-viet-green-medium hover:text-viet-green-dark\"\n                        data-testid={`blog-read-more-${post.id}`}\n                      >\n                        Read More\n                        <ArrowRight className=\"h-3 w-3 ml-1\" />\n                      </Button>\n                    </div>\n                  </div>\n                </article>\n              ))}\n            </div>\n          )}\n\n          {/* Load More */}\n          {filteredPosts.length > 6 && (\n            <div className=\"text-center mt-12\">\n              <Button \n                className=\"bg-viet-green-dark hover:bg-viet-green-medium text-white px-8 py-3 rounded-lg text-lg font-semibold\"\n                data-testid=\"button-load-more-posts\"\n              >\n                Load More Articles\n              </Button>\n            </div>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":16796},"client/src/pages/contact.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { useState } from \"react\";\nimport { MapPin, Phone, Mail, Clock, Send, MessageCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst contactInfo = [\n  {\n    icon: MapPin,\n    title: \"Visit Our Office\",\n    details: [\"123 Nguyen Hue Street\", \"District 1, Ho Chi Minh City\", \"Vietnam\"],\n    action: \"Get Directions\"\n  },\n  {\n    icon: Phone,\n    title: \"Call Us\",\n    details: [\"+84 123 456 789\", \"+84 987 654 321\"],\n    action: \"Call Now\"\n  },\n  {\n    icon: Mail,\n    title: \"Email Us\",\n    details: [\"hello@vietroot.com\", \"support@vietroot.com\"],\n    action: \"Send Email\"\n  },\n  {\n    icon: Clock,\n    title: \"Business Hours\",\n    details: [\"Mon - Fri: 8:00 AM - 6:00 PM\", \"Saturday: 9:00 AM - 4:00 PM\", \"Sunday: Closed\"],\n    action: null\n  }\n];\n\nconst faqs = [\n  {\n    question: \"What makes your products organic?\",\n    answer: \"All our products are certified organic and sourced directly from farmers who follow strict organic farming practices without the use of synthetic pesticides or fertilizers.\"\n  },\n  {\n    question: \"Do you ship internationally?\",\n    answer: \"Yes, we ship to most countries worldwide. Shipping costs and delivery times vary by destination. Please contact us for specific shipping information to your country.\"\n  },\n  {\n    question: \"How do you ensure product quality?\",\n    answer: \"We have strict quality control measures in place, including regular farm visits, third-party certifications, and thorough testing of all products before they reach our customers.\"\n  },\n  {\n    question: \"Can I visit your partner farms?\",\n    answer: \"We offer farm tours by appointment. Contact us to arrange a visit to see our sustainable farming practices firsthand and meet our partner farmers.\"\n  }\n];\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    subject: \"\",\n    message: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"Thank you for contacting us. We'll respond within 24 hours.\",\n      });\n      setFormData({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        subject: \"\",\n        message: \"\"\n      });\n      setIsSubmitting(false);\n    }, 1000);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n        {/* Background Decorations */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white/10 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white/20 backdrop-blur-sm rounded-full mb-8 animate-float shadow-2xl\">\n              <MessageCircle className=\"h-12 w-12 text-white\" />\n            </div>\n            <h1 \n              className=\"text-5xl md:text-7xl font-bold mb-8 animate-fade-in-up\"\n              data-testid=\"text-contact-hero-title\"\n            >\n              Get In\n              <span className=\"block bg-gradient-to-r from-white to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n                Touch\n              </span>\n            </h1>\n            <div className=\"w-32 h-2 bg-gradient-to-r from-white via-viet-earth-gold to-white mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg mb-8\"></div>\n            <p \n              className=\"text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400\"\n              data-testid=\"text-contact-hero-description\"\n            >\n              Have questions about our products or want to learn more about VietRoot? We'd love to hear from you. Let's start a conversation about authentic Vietnamese organic goodness.\n            </p>\n          </div>\n\n          {/* Quick Contact Options */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 animate-fade-in-up animation-delay-600\">\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <Phone className=\"h-6 w-6 text-white mx-auto mb-2\" />\n              <div className=\"text-sm font-bold text-white\">Call Us</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <Mail className=\"h-6 w-6 text-white mx-auto mb-2\" />\n              <div className=\"text-sm font-bold text-white\">Email</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <MapPin className=\"h-6 w-6 text-white mx-auto mb-2\" />\n              <div className=\"text-sm font-bold text-white\">Visit</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20\">\n              <MessageCircle className=\"h-6 w-6 text-white mx-auto mb-2\" />\n              <div className=\"text-sm font-bold text-white\">Chat</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Information */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {contactInfo.map((info, index) => {\n              const IconComponent = info.icon;\n              return (\n                <div \n                  key={index}\n                  className=\"text-center p-6 bg-viet-earth-cream rounded-xl\"\n                  data-testid={`contact-info-${index}`}\n                >\n                  <IconComponent className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n                  <h3 \n                    className=\"text-lg font-semibold text-viet-green-dark mb-3\"\n                    data-testid={`contact-title-${index}`}\n                  >\n                    {info.title}\n                  </h3>\n                  <div className=\"space-y-1 text-gray-700 mb-4\">\n                    {info.details.map((detail, detailIndex) => (\n                      <p \n                        key={detailIndex}\n                        data-testid={`contact-detail-${index}-${detailIndex}`}\n                      >\n                        {detail}\n                      </p>\n                    ))}\n                  </div>\n                  {info.action && (\n                    <Button \n                      size=\"sm\"\n                      className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white\"\n                      data-testid={`contact-action-${index}`}\n                    >\n                      {info.action}\n                    </Button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form */}\n      <section className=\"py-16 md:py-24 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 md:p-12\">\n            <div className=\"text-center mb-8\">\n              <h2 \n                className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n                data-testid=\"text-contact-form-title\"\n              >\n                Send Us a Message\n              </h2>\n              <p \n                className=\"text-lg text-gray-600\"\n                data-testid=\"text-contact-form-subtitle\"\n              >\n                Fill out the form below and we'll get back to you as soon as possible\n              </p>\n            </div>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Full Name *\n                  </label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full\"\n                    data-testid=\"input-contact-name\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address *\n                  </label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full\"\n                    data-testid=\"input-contact-email\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone Number\n                  </label>\n                  <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    className=\"w-full\"\n                    data-testid=\"input-contact-phone\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Subject *\n                  </label>\n                  <Input\n                    type=\"text\"\n                    name=\"subject\"\n                    value={formData.subject}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full\"\n                    data-testid=\"input-contact-subject\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Message *\n                </label>\n                <Textarea\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleChange}\n                  required\n                  rows={6}\n                  className=\"w-full\"\n                  placeholder=\"Tell us how we can help you...\"\n                  data-testid=\"textarea-contact-message\"\n                />\n              </div>\n              \n              <div className=\"text-center\">\n                <Button \n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white px-8 py-3 rounded-lg text-lg font-semibold\"\n                  data-testid=\"button-send-message\"\n                >\n                  <Send className=\"h-5 w-5 mr-2\" />\n                  {isSubmitting ? \"Sending...\" : \"Send Message\"}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n\n      {/* Quick Chat Option */}\n      <section className=\"py-16 md:py-24 bg-viet-green-dark text-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <MessageCircle className=\"h-16 w-16 mx-auto mb-6 text-viet-green-light\" />\n          <h2 \n            className=\"text-3xl md:text-4xl font-bold mb-4\"\n            data-testid=\"text-quick-chat-title\"\n          >\n            Need Immediate Help?\n          </h2>\n          <p \n            className=\"text-lg text-gray-300 mb-8\"\n            data-testid=\"text-quick-chat-description\"\n          >\n            Connect with us instantly via WhatsApp for quick questions and immediate support.\n          </p>\n          <Button \n            className=\"bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg text-lg font-semibold\"\n            data-testid=\"button-whatsapp-chat\"\n          >\n            <MessageCircle className=\"h-5 w-5 mr-2\" />\n            Chat on WhatsApp\n          </Button>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-faq-title\"\n            >\n              Frequently Asked Questions\n            </h2>\n            <p \n              className=\"text-lg text-gray-600\"\n              data-testid=\"text-faq-subtitle\"\n            >\n              Find quick answers to common questions about VietRoot\n            </p>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {faqs.map((faq, index) => (\n              <div \n                key={index}\n                className=\"bg-viet-earth-cream rounded-xl p-6\"\n                data-testid={`faq-${index}`}\n              >\n                <h3 \n                  className=\"text-lg font-semibold text-viet-green-dark mb-3\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  {faq.question}\n                </h3>\n                <p \n                  className=\"text-gray-700\"\n                  data-testid={`faq-answer-${index}`}\n                >\n                  {faq.answer}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14721},"client/src/pages/home.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport HeroSection from \"@/components/HeroSection\";\nimport QuickIntro from \"@/components/QuickIntro\";\nimport FeaturedProducts from \"@/components/FeaturedProducts\";\nimport Mission from \"@/components/Mission\";\nimport Vision from \"@/components/Vision\";\nimport NewsletterSignup from \"@/components/NewsletterSignup\";\nimport CallToActionBlocks from \"@/components/CallToActionBlocks\";\nimport Footer from \"@/components/Footer\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      <HeroSection />\n      <QuickIntro />\n      <FeaturedProducts />\n      <Mission />\n      <Vision />\n      <NewsletterSignup />\n      <CallToActionBlocks />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":778},"client/src/pages/impact.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { Leaf, Users, Award, Heart, MapPin, TrendingUp } from \"lucide-react\";\n\nconst farmerStories = [\n  {\n    id: 1,\n    name: \"Nguyen Van Duc\",\n    location: \"Ha Giang Province\",\n    product: \"Wild Honey\",\n    story: \"For three generations, my family has been beekeeping in the pristine mountains of Ha Giang. VietRoot has helped us reach customers who truly appreciate the purity and quality of our wild honey.\",\n    image: \"https://images.unsplash.com/photo-1500937386664-56d1dfef3854?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    partnership: \"3 years\"\n  },\n  {\n    id: 2,\n    name: \"Tran Thi Mai\",\n    location: \"Thai Nguyen Province\",\n    product: \"Organic Green Tea\",\n    story: \"My tea gardens have been organic for over 15 years. Working with VietRoot has allowed me to expand my reach while maintaining the traditional methods passed down from my grandmother.\",\n    image: \"https://images.unsplash.com/photo-1571168507631-6b5b6c0b0c00?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    partnership: \"2 years\"\n  },\n  {\n    id: 3,\n    name: \"Le Van Minh\",\n    location: \"Ben Tre Province\",\n    product: \"Virgin Coconut Oil\",\n    story: \"Our coconut groves have been in the family for decades. VietRoot's fair trade practices have improved our quality of life and allowed us to invest in sustainable farming methods.\",\n    image: \"https://images.unsplash.com/photo-1472214103451-9374bd1c798e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    partnership: \"4 years\"\n  }\n];\n\nconst impactStats = [\n  {\n    icon: Users,\n    number: \"150+\",\n    label: \"Partner Farmers\",\n    description: \"Directly supporting farmers across Vietnam\"\n  },\n  {\n    icon: Leaf,\n    number: \"500+\",\n    label: \"Hectares Organic\",\n    description: \"Land converted to organic farming\"\n  },\n  {\n    icon: TrendingUp,\n    number: \"40%\",\n    label: \"Income Increase\",\n    description: \"Average farmer income improvement\"\n  },\n  {\n    icon: Award,\n    number: \"12\",\n    label: \"Certifications\",\n    description: \"Organic and fair trade certifications\"\n  }\n];\n\nconst culturalPractices = [\n  {\n    title: \"Traditional Tea Ceremony\",\n    description: \"Our tea farmers maintain the ancient art of Vietnamese tea preparation, ensuring each leaf carries cultural significance.\",\n    image: \"https://images.unsplash.com/photo-1544787219-7f47ccb76574?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n  },\n  {\n    title: \"Ancestral Beekeeping\",\n    description: \"Wild honey collection follows methods passed down through generations, respecting both bees and forest ecosystems.\",\n    image: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n  },\n  {\n    title: \"Heritage Spice Cultivation\",\n    description: \"Turmeric and ginger cultivation using traditional companion planting techniques for maximum potency.\",\n    image: \"https://images.unsplash.com/photo-1599639402519-8d7e0c0cd55d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"\n  }\n];\n\nexport default function Impact() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n        {/* Background Decorations */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white/10 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white/20 backdrop-blur-sm rounded-full mb-8 animate-float shadow-2xl\">\n              <Leaf className=\"h-12 w-12 text-white\" />\n            </div>\n            <h1 \n              className=\"text-5xl md:text-7xl font-bold mb-8 animate-fade-in-up\"\n              data-testid=\"text-impact-hero-title\"\n            >\n              Our Impact\n              <span className=\"block bg-gradient-to-r from-white to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n                Story\n              </span>\n            </h1>\n            <div className=\"w-32 h-2 bg-gradient-to-r from-white via-viet-earth-gold to-white mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg mb-8\"></div>\n            <p \n              className=\"text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400\"\n              data-testid=\"text-impact-hero-description\"\n            >\n              Every purchase creates a ripple effect of positive change across Vietnamese farming communities. Together, we're building a sustainable future rooted in tradition and powered by purpose.\n            </p>\n          </div>\n\n          {/* Impact Highlights */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 animate-fade-in-up animation-delay-600\">\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">150+</div>\n              <div className=\"text-white/80 text-sm\">Partner Farmers</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">500+</div>\n              <div className=\"text-white/80 text-sm\">Hectares Organic</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">40%</div>\n              <div className=\"text-white/80 text-sm\">Income Increase</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">12</div>\n              <div className=\"text-white/80 text-sm\">Certifications</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Impact Statistics */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-stats-title\"\n            >\n              By the Numbers\n            </h2>\n            <p \n              className=\"text-lg text-gray-600\"\n              data-testid=\"text-stats-subtitle\"\n            >\n              Measuring our positive impact on communities and environment\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {impactStats.map((stat, index) => {\n              const IconComponent = stat.icon;\n              return (\n                <div \n                  key={index}\n                  className=\"text-center p-6 bg-viet-earth-cream rounded-xl\"\n                  data-testid={`stat-${index}`}\n                >\n                  <IconComponent className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n                  <div \n                    className=\"text-3xl font-bold text-viet-green-dark mb-2\"\n                    data-testid={`stat-number-${index}`}\n                  >\n                    {stat.number}\n                  </div>\n                  <h3 \n                    className=\"text-lg font-semibold text-gray-800 mb-2\"\n                    data-testid={`stat-label-${index}`}\n                  >\n                    {stat.label}\n                  </h3>\n                  <p \n                    className=\"text-gray-600 text-sm\"\n                    data-testid={`stat-description-${index}`}\n                  >\n                    {stat.description}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Farmer Stories */}\n      <section className=\"py-16 md:py-24 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-stories-title\"\n            >\n              Farmer Stories\n            </h2>\n            <p \n              className=\"text-lg text-gray-600\"\n              data-testid=\"text-stories-subtitle\"\n            >\n              Meet the passionate farmers behind our products\n            </p>\n          </div>\n          \n          <div className=\"space-y-12\">\n            {farmerStories.map((farmer) => (\n              <div \n                key={farmer.id}\n                className=\"bg-white rounded-xl shadow-lg overflow-hidden\"\n                data-testid={`farmer-story-${farmer.id}`}\n              >\n                <div className=\"grid grid-cols-1 lg:grid-cols-2\">\n                  <div className=\"p-8 lg:p-12\">\n                    <div className=\"flex items-center mb-4\">\n                      <MapPin className=\"text-viet-green-medium h-5 w-5 mr-2\" />\n                      <span \n                        className=\"text-gray-600\"\n                        data-testid={`farmer-location-${farmer.id}`}\n                      >\n                        {farmer.location}\n                      </span>\n                    </div>\n                    <h3 \n                      className=\"text-2xl font-bold text-viet-green-dark mb-2\"\n                      data-testid={`farmer-name-${farmer.id}`}\n                    >\n                      {farmer.name}\n                    </h3>\n                    <p \n                      className=\"text-viet-earth-gold font-semibold mb-4\"\n                      data-testid={`farmer-product-${farmer.id}`}\n                    >\n                      {farmer.product} Producer\n                    </p>\n                    <blockquote \n                      className=\"text-gray-700 italic text-lg leading-relaxed mb-4\"\n                      data-testid={`farmer-story-${farmer.id}`}\n                    >\n                      \"{farmer.story}\"\n                    </blockquote>\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <Heart className=\"h-4 w-4 mr-2 text-red-500\" />\n                      <span data-testid={`farmer-partnership-${farmer.id}`}>\n                        Partnership: {farmer.partnership}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"h-64 lg:h-auto\">\n                    <img \n                      src={farmer.image} \n                      alt={`${farmer.name} - ${farmer.product} farmer`}\n                      className=\"w-full h-full object-cover\"\n                      data-testid={`farmer-image-${farmer.id}`}\n                    />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Cultural Roots */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-culture-title\"\n            >\n              Preserving Cultural Heritage\n            </h2>\n            <p \n              className=\"text-lg text-gray-600\"\n              data-testid=\"text-culture-subtitle\"\n            >\n              Every product carries the wisdom of Vietnamese agricultural traditions\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {culturalPractices.map((practice, index) => (\n              <div \n                key={index}\n                className=\"bg-viet-earth-cream rounded-xl overflow-hidden\"\n                data-testid={`cultural-practice-${index}`}\n              >\n                <img \n                  src={practice.image} \n                  alt={practice.title}\n                  className=\"w-full h-48 object-cover\"\n                  data-testid={`cultural-image-${index}`}\n                />\n                <div className=\"p-6\">\n                  <h3 \n                    className=\"text-xl font-semibold text-viet-green-dark mb-3\"\n                    data-testid={`cultural-title-${index}`}\n                  >\n                    {practice.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-700\"\n                    data-testid={`cultural-description-${index}`}\n                  >\n                    {practice.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Why It Matters */}\n      <section className=\"py-16 md:py-24 bg-viet-green-dark text-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 \n            className=\"text-3xl md:text-4xl font-bold mb-8\"\n            data-testid=\"text-why-matters-title\"\n          >\n            Why It Matters\n          </h2>\n          <div className=\"space-y-6 text-lg text-gray-300\">\n            <p data-testid=\"text-why-matters-p1\">\n              In a world of mass-produced goods, we choose to work directly with farmers who care about quality, sustainability, and cultural preservation. This isn't just business – it's a movement.\n            </p>\n            <p data-testid=\"text-why-matters-p2\">\n              When you choose VietRoot, you're supporting families, preserving traditions, and promoting sustainable agriculture. You're part of a story that connects Vietnamese soil to your table, carrying with it generations of knowledge and care.\n            </p>\n            <p data-testid=\"text-why-matters-p3\">\n              Together, we're proving that commerce can be a force for good, creating prosperity while protecting our planet and honoring our cultural heritage.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14666},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/partnerships.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { useState } from \"react\";\nimport { Handshake, TrendingUp, Globe, Download, Send } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst benefits = [\n  {\n    icon: TrendingUp,\n    title: \"Premium Quality Products\",\n    description: \"Access to Vietnam's finest organic products with guaranteed quality and traceability.\"\n  },\n  {\n    icon: Globe,\n    title: \"Growing Market Demand\",\n    description: \"Tap into the rapidly expanding organic and wellness market worldwide.\"\n  },\n  {\n    icon: Handshake,\n    title: \"Reliable Partnership\",\n    description: \"Work with a trusted partner committed to long-term relationships and mutual success.\"\n  }\n];\n\nconst partnershipTypes = [\n  {\n    title: \"Wholesale Distribution\",\n    description: \"Become a regional distributor for VietRoot products in your market.\",\n    minOrder: \"Minimum order: ₫10,000,000\",\n    benefits: [\"Wholesale pricing\", \"Marketing support\", \"Exclusive territory\"]\n  },\n  {\n    title: \"Retail Partnership\",\n    description: \"Stock VietRoot products in your store or online marketplace.\",\n    minOrder: \"Minimum order: ₫2,000,000\",\n    benefits: [\"Competitive margins\", \"Product training\", \"Display materials\"]\n  },\n  {\n    title: \"Investment Opportunity\",\n    description: \"Join us in expanding VietRoot's global reach and impact.\",\n    minOrder: \"Investment from: $50,000 USD\",\n    benefits: [\"Equity participation\", \"Board representation\", \"Strategic input\"]\n  }\n];\n\nexport default function Partnerships() {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    partnershipType: \"\",\n    message: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      toast({\n        title: \"Partnership inquiry sent!\",\n        description: \"Thank you for your interest. Our team will contact you within 24 hours.\",\n      });\n      setFormData({\n        company: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        partnershipType: \"\",\n        message: \"\"\n      });\n      setIsSubmitting(false);\n    }, 1000);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n        {/* Background Decorations */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white/10 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white/20 backdrop-blur-sm rounded-full mb-8 animate-float shadow-2xl\">\n              <Handshake className=\"h-12 w-12 text-white\" />\n            </div>\n            <h1 \n              className=\"text-5xl md:text-7xl font-bold mb-8 animate-fade-in-up\"\n              data-testid=\"text-partnerships-hero-title\"\n            >\n              Partner With\n              <span className=\"block bg-gradient-to-r from-white to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n                VietRoot\n              </span>\n            </h1>\n            <div className=\"w-32 h-2 bg-gradient-to-r from-white via-viet-earth-gold to-white mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg mb-8\"></div>\n            <p \n              className=\"text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400\"\n              data-testid=\"text-partnerships-hero-description\"\n            >\n              Join us in bringing authentic Vietnamese organic products to the world while creating sustainable value for all stakeholders. Together, we grow stronger.\n            </p>\n          </div>\n\n          {/* Partnership Types Preview */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 animate-fade-in-up animation-delay-600\">\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <TrendingUp className=\"h-8 w-8 text-white mx-auto mb-3\" />\n              <div className=\"text-lg font-bold text-white mb-2\">Wholesale</div>\n              <div className=\"text-white/80 text-sm\">Distribution opportunities</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <Globe className=\"h-8 w-8 text-white mx-auto mb-3\" />\n              <div className=\"text-lg font-bold text-white mb-2\">Retail</div>\n              <div className=\"text-white/80 text-sm\">Store partnerships</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <Handshake className=\"h-8 w-8 text-white mx-auto mb-3\" />\n              <div className=\"text-lg font-bold text-white mb-2\">Investment</div>\n              <div className=\"text-white/80 text-sm\">Growth opportunities</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Value Proposition */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-why-partner-title\"\n            >\n              Why Partner With VietRoot?\n            </h2>\n            <p \n              className=\"text-lg text-gray-600 max-w-3xl mx-auto\"\n              data-testid=\"text-why-partner-subtitle\"\n            >\n              We're more than a supplier – we're your partner in building a sustainable, profitable business in the organic products market.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {benefits.map((benefit, index) => {\n              const IconComponent = benefit.icon;\n              return (\n                <div \n                  key={index}\n                  className=\"text-center p-8 bg-viet-earth-cream rounded-xl\"\n                  data-testid={`benefit-${index}`}\n                >\n                  <IconComponent className=\"text-viet-green-medium h-16 w-16 mx-auto mb-6\" />\n                  <h3 \n                    className=\"text-xl font-semibold text-viet-green-dark mb-4\"\n                    data-testid={`benefit-title-${index}`}\n                  >\n                    {benefit.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-700\"\n                    data-testid={`benefit-description-${index}`}\n                  >\n                    {benefit.description}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Partnership Types */}\n      <section className=\"py-16 md:py-24 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 \n              className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n              data-testid=\"text-partnership-types-title\"\n            >\n              Partnership Opportunities\n            </h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {partnershipTypes.map((type, index) => (\n              <div \n                key={index}\n                className=\"bg-white rounded-xl shadow-lg p-8 hover:shadow-xl transition-shadow duration-300\"\n                data-testid={`partnership-type-${index}`}\n              >\n                <h3 \n                  className=\"text-2xl font-bold text-viet-green-dark mb-4\"\n                  data-testid={`partnership-title-${index}`}\n                >\n                  {type.title}\n                </h3>\n                <p \n                  className=\"text-gray-700 mb-4\"\n                  data-testid={`partnership-description-${index}`}\n                >\n                  {type.description}\n                </p>\n                <p \n                  className=\"text-viet-earth-gold font-semibold mb-6\"\n                  data-testid={`partnership-min-order-${index}`}\n                >\n                  {type.minOrder}\n                </p>\n                <ul className=\"space-y-2\">\n                  {type.benefits.map((benefit, benefitIndex) => (\n                    <li \n                      key={benefitIndex}\n                      className=\"flex items-center text-gray-600\"\n                      data-testid={`partnership-benefit-${index}-${benefitIndex}`}\n                    >\n                      <div className=\"w-2 h-2 bg-viet-green-medium rounded-full mr-3\"></div>\n                      {benefit}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Download Resources */}\n      <section className=\"py-16 md:py-24 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 \n            className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-8\"\n            data-testid=\"text-resources-title\"\n          >\n            Partnership Resources\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"bg-viet-earth-cream rounded-xl p-8\">\n              <Download className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n              <h3 \n                className=\"text-xl font-semibold text-viet-green-dark mb-4\"\n                data-testid=\"text-wholesale-linesheet-title\"\n              >\n                Wholesale Line Sheet\n              </h3>\n              <p \n                className=\"text-gray-700 mb-6\"\n                data-testid=\"text-wholesale-linesheet-description\"\n              >\n                Download our complete product catalog with wholesale pricing and specifications.\n              </p>\n              <Button \n                className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white\"\n                data-testid=\"button-download-linesheet\"\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Download Line Sheet\n              </Button>\n            </div>\n            \n            <div className=\"bg-viet-earth-cream rounded-xl p-8\">\n              <Download className=\"text-viet-green-medium h-12 w-12 mx-auto mb-4\" />\n              <h3 \n                className=\"text-xl font-semibold text-viet-green-dark mb-4\"\n                data-testid=\"text-investor-deck-title\"\n              >\n                Investor Pitch Deck\n              </h3>\n              <p \n                className=\"text-gray-700 mb-6\"\n                data-testid=\"text-investor-deck-description\"\n              >\n                Access our investor presentation with market analysis and growth projections.\n              </p>\n              <Button \n                className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white\"\n                data-testid=\"button-download-pitchdeck\"\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Download Pitch Deck\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form */}\n      <section className=\"py-16 md:py-24 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 md:p-12\">\n            <div className=\"text-center mb-8\">\n              <h2 \n                className=\"text-3xl md:text-4xl font-bold text-viet-green-dark mb-4\"\n                data-testid=\"text-contact-form-title\"\n              >\n                Start Your Partnership Journey\n              </h2>\n              <p \n                className=\"text-lg text-gray-600\"\n                data-testid=\"text-contact-form-subtitle\"\n              >\n                Get in touch with our partnership team to explore opportunities\n              </p>\n            </div>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Company Name *\n                  </label>\n                  <Input\n                    type=\"text\"\n                    name=\"company\"\n                    value={formData.company}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full\"\n                    data-testid=\"input-company\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Your Name *\n                  </label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full\"\n                    data-testid=\"input-name\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email *\n                  </label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    className=\"w-full\"\n                    data-testid=\"input-email\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone Number\n                  </label>\n                  <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    className=\"w-full\"\n                    data-testid=\"input-phone\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Partnership Type *\n                </label>\n                <select\n                  name=\"partnershipType\"\n                  value={formData.partnershipType}\n                  onChange={handleChange}\n                  required\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-viet-green-medium\"\n                  data-testid=\"select-partnership-type\"\n                >\n                  <option value=\"\">Select partnership type</option>\n                  <option value=\"wholesale\">Wholesale Distribution</option>\n                  <option value=\"retail\">Retail Partnership</option>\n                  <option value=\"investment\">Investment Opportunity</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Message\n                </label>\n                <Textarea\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleChange}\n                  rows={4}\n                  className=\"w-full\"\n                  placeholder=\"Tell us about your business and partnership goals...\"\n                  data-testid=\"textarea-message\"\n                />\n              </div>\n              \n              <div className=\"text-center\">\n                <Button \n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"bg-viet-green-medium hover:bg-viet-green-dark text-white px-8 py-3 rounded-lg text-lg font-semibold\"\n                  data-testid=\"button-submit-partnership\"\n                >\n                  <Send className=\"h-5 w-5 mr-2\" />\n                  {isSubmitting ? \"Sending...\" : \"Send Partnership Inquiry\"}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":17599},"client/src/pages/products.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { useState } from \"react\";\nimport { ShoppingCart, Filter, Star } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst categories = [\n  { id: \"all\", name: \"All Products\", count: 24 },\n  { id: \"teas\", name: \"Organic Teas\", count: 8 },\n  { id: \"powders\", name: \"Herbal Powders\", count: 6 },\n  { id: \"remedies\", name: \"Herbal Remedies\", count: 10 }\n];\n\nconst products = [\n  {\n    id: 1,\n    name: \"Wild Ha Giang Honey\",\n    category: \"remedies\",\n    description: \"Pure, naturally harvested from the mountains of Ha Giang\",\n    price: \"₫450,000\",\n    originalPrice: \"₫500,000\",\n    rating: 4.9,\n    reviews: 127,\n    image: \"https://images.unsplash.com/photo-1587049352846-4a222e784d38?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    badges: [\"Organic\", \"Wild Harvested\"],\n    inStock: true\n  },\n  {\n    id: 2,\n    name: \"Premium Green Tea\",\n    category: \"teas\",\n    description: \"Hand-picked from the highlands of Thai Nguyen\",\n    price: \"₫320,000\",\n    rating: 4.8,\n    reviews: 89,\n    image: \"https://images.unsplash.com/photo-1556679343-c7306c1976bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    badges: [\"Organic\", \"Premium\"],\n    inStock: true\n  },\n  {\n    id: 3,\n    name: \"Turmeric Root Powder\",\n    category: \"powders\",\n    description: \"Ground from fresh turmeric roots, anti-inflammatory properties\",\n    price: \"₫180,000\",\n    rating: 4.7,\n    reviews: 156,\n    image: \"https://images.unsplash.com/photo-1615485499601-773e0eb7f0f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    badges: [\"Organic\", \"Ground Fresh\"],\n    inStock: true\n  },\n  {\n    id: 4,\n    name: \"Virgin Coconut Oil\",\n    category: \"remedies\",\n    description: \"Cold-pressed from Ben Tre coconuts, multiple health benefits\",\n    price: \"₫280,000\",\n    rating: 4.9,\n    reviews: 203,\n    image: \"https://images.unsplash.com/photo-1474979266404-7eaacbcd87c5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    badges: [\"Cold-Pressed\", \"Virgin\"],\n    inStock: false\n  },\n  {\n    id: 5,\n    name: \"Dried Jackfruit\",\n    category: \"remedies\",\n    description: \"Sweet & natural dried fruit, no added sugar or preservatives\",\n    price: \"₫150,000\",\n    rating: 4.6,\n    reviews: 78,\n    image: \"https://images.unsplash.com/photo-1584308972272-9e4e7685e80f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    badges: [\"No Additives\", \"Natural\"],\n    inStock: true\n  },\n  {\n    id: 6,\n    name: \"Ginger Root Powder\",\n    category: \"powders\",\n    description: \"Potent ginger powder for digestive health and immunity\",\n    price: \"₫120,000\",\n    rating: 4.8,\n    reviews: 94,\n    image: \"https://images.unsplash.com/photo-1599639402519-8d7e0c0cd55d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n    badges: [\"Organic\", \"Immune Boost\"],\n    inStock: true\n  }\n];\n\nexport default function Products() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const filteredProducts = selectedCategory === \"all\" \n    ? products \n    : products.filter(product => product.category === selectedCategory);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-viet-green-dark via-viet-green-medium to-viet-green-dark text-white relative overflow-hidden\">\n        {/* Background Decorations */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-10 w-72 h-72 bg-white/5 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute bottom-10 right-10 w-96 h-96 bg-viet-earth-gold/10 rounded-full blur-3xl animate-float animation-delay-400\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white/10 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-24 h-24 bg-white/20 backdrop-blur-sm rounded-full mb-8 animate-float shadow-2xl\">\n              <ShoppingCart className=\"h-12 w-12 text-white\" />\n            </div>\n            <h1 \n              className=\"text-5xl md:text-7xl font-bold mb-8 animate-fade-in-up\"\n              data-testid=\"text-products-hero-title\"\n            >\n              Our Premium \n              <span className=\"block bg-gradient-to-r from-white to-viet-earth-gold bg-clip-text text-transparent animate-gradient\">\n                Products\n              </span>\n            </h1>\n            <div className=\"w-32 h-2 bg-gradient-to-r from-white via-viet-earth-gold to-white mx-auto rounded-full animate-fade-in-up animation-delay-200 shadow-lg mb-8\"></div>\n            <p \n              className=\"text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed animate-fade-in-up animation-delay-400\"\n              data-testid=\"text-products-hero-description\"\n            >\n              Discover authentic Vietnamese organic products, carefully sourced from dedicated farmers across the country. From mountain-grown tea to delta-fresh fruits, every product tells a story of tradition and excellence.\n            </p>\n          </div>\n\n          {/* Stats Section */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 animate-fade-in-up animation-delay-600\">\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">50+</div>\n              <div className=\"text-white/80 text-sm\">Premium Products</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">100%</div>\n              <div className=\"text-white/80 text-sm\">Organic Certified</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">200+</div>\n              <div className=\"text-white/80 text-sm\">Partner Farms</div>\n            </div>\n            <div className=\"text-center bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20\">\n              <div className=\"text-3xl font-bold text-white mb-2\">5⭐</div>\n              <div className=\"text-white/80 text-sm\">Average Rating</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Products Section */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          \n          {/* Category Filter */}\n          <div className=\"mb-12\">\n            <div className=\"flex flex-wrap justify-center gap-4\">\n              {categories.map((category) => (\n                <Button\n                  key={category.id}\n                  variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category.id)}\n                  className={`px-6 py-3 rounded-lg font-medium transition-colors duration-200 ${\n                    selectedCategory === category.id \n                      ? 'bg-viet-green-medium text-white' \n                      : 'text-viet-green-dark border-viet-green-medium hover:bg-viet-green-light'\n                  }`}\n                  data-testid={`filter-${category.id}`}\n                >\n                  {category.name} ({category.count})\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Products Grid */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredProducts.map((product) => (\n              <div \n                key={product.id}\n                className=\"bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 overflow-hidden\"\n                data-testid={`product-card-${product.id}`}\n              >\n                <div className=\"relative\">\n                  <img \n                    src={product.image} \n                    alt={product.name}\n                    className=\"w-full h-48 object-cover\"\n                    data-testid={`product-image-${product.id}`}\n                  />\n                  {!product.inStock && (\n                    <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n                      <span className=\"text-white font-semibold\">Out of Stock</span>\n                    </div>\n                  )}\n                  <div className=\"absolute top-3 left-3 flex flex-wrap gap-1\">\n                    {product.badges.map((badge) => (\n                      <Badge \n                        key={badge}\n                        className=\"bg-viet-green-medium text-white text-xs\"\n                        data-testid={`badge-${product.id}-${badge.toLowerCase().replace(' ', '-')}`}\n                      >\n                        {badge}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"p-6\">\n                  <h3 \n                    className=\"text-lg font-semibold text-gray-800 mb-2\"\n                    data-testid={`product-name-${product.id}`}\n                  >\n                    {product.name}\n                  </h3>\n                  \n                  <p \n                    className=\"text-gray-600 text-sm mb-3 line-clamp-2\"\n                    data-testid={`product-description-${product.id}`}\n                  >\n                    {product.description}\n                  </p>\n                  \n                  <div className=\"flex items-center mb-3\">\n                    <Star className=\"h-4 w-4 text-yellow-400 fill-current\" />\n                    <span \n                      className=\"text-sm text-gray-600 ml-1\"\n                      data-testid={`product-rating-${product.id}`}\n                    >\n                      {product.rating} ({product.reviews} reviews)\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <span \n                        className=\"text-xl font-bold text-viet-earth-gold\"\n                        data-testid={`product-price-${product.id}`}\n                      >\n                        {product.price}\n                      </span>\n                      {product.originalPrice && (\n                        <span \n                          className=\"text-sm text-gray-400 line-through ml-2\"\n                          data-testid={`product-original-price-${product.id}`}\n                        >\n                          {product.originalPrice}\n                        </span>\n                      )}\n                    </div>\n                    \n                    <Button \n                      disabled={!product.inStock}\n                      className={`px-4 py-2 rounded-lg text-sm transition-colors duration-200 ${\n                        product.inStock \n                          ? 'bg-viet-green-medium hover:bg-viet-green-dark text-white' \n                          : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      }`}\n                      data-testid={`add-to-cart-${product.id}`}\n                    >\n                      <ShoppingCart className=\"h-4 w-4 mr-1\" />\n                      {product.inStock ? 'Add to Cart' : 'Out of Stock'}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Load More */}\n          <div className=\"text-center mt-12\">\n            <Button \n              className=\"bg-viet-green-dark hover:bg-viet-green-medium text-white px-8 py-3 rounded-lg text-lg font-semibold\"\n              data-testid=\"button-load-more\"\n            >\n              Load More Products\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":12256},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}